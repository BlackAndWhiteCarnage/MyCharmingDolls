@use 'scss/breakpoint' as bp;
@use 'scss/unit' as u;
@use 'scss/font';
@use 'scss/color';

@mixin colors(
  $background: var(--theme-color-secondary),
  $color: var(--theme-color-background),
  $background-hover: var(--theme-color-background),
  $color-hover: var(--theme-color-secondary),
  $border-hover: null
) {
  background: $background;
  color: $color;

  .arrow path {
    fill: $color;
  }

  &:hover {
    background: $background-hover;
    border-color: $border-hover;
    color: $color-hover;

    .arrow path {
      fill: $color-hover;
    }
  }
}

.button {
  align-items: center;
  border: none;
  border: u.rem-calc(2) solid transparent;
  border-radius: u.rem-calc(35);
  box-shadow: 0 u.rem-calc(4) u.rem-calc(10) rgba(88, 88, 88, 0.15);
  cursor: pointer;
  display: flex;
  font-family: font.get(secondary);
  font-weight: 400;
  gap: u.rem-calc(10);
  justify-content: center;
  padding: u.rem-calc(10) u.rem-calc(18);
  transition: box-shadow 0.2s, color 0.2s, background 0.2s, transform 0.2s;

  @include bp.down(xs) {
    padding: u.rem-calc(11) u.rem-calc(16);
  }

  &:hover {
    box-shadow: 0 u.rem-calc(4) u.rem-calc(20) rgba(88, 88, 88, 0.4);
    transform: scale(1.02);
  }

  &:disabled {
    filter: blur(u.rem-calc(1));
    opacity: 0.4;
    pointer-events: none;
  }
}

.hasFullWidth {
  width: 100%;
}

.arrow {
  height: u.rem-calc(13);
  width: u.rem-calc(18);

  path {
    transition: 0.2s;
  }
}

.primaryVariant {
  @include colors($border-hover: var(--theme-color-secondary));
}

.secondaryVariant {
  @include colors(
    var(--theme-color-background),
    var(--theme-color-primary),
    var(--theme-color-primary),
    var(--theme-color-background)
  );
}
