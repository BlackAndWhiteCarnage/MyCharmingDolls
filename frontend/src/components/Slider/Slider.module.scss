@use 'scss/breakpoint' as bp;
@use 'scss/unit' as u;
@use 'scss/color' as c;

@mixin slide-transform($rotate: 17deg, $translate-mobile-y: 70) {
  transform: rotate($rotate) translateY(u.rem-calc(60)) scale(0.9) !important;

  @include bp.down(lg) {
    transform: rotate($rotate) translateY(u.rem-calc($translate-mobile-y))
      scale(0.9) !important;
  }
}

.wrapper {
  position: relative;

  :global(.swiper) {
    overflow: visible !important;
  }

  :global(.atropos-inner) {
    overflow: visible !important;
  }

  :global(.swiper-slide-next) {
    z-index: -1;
  }

  :global(.atropos-scale) {
    pointer-events: none;
  }

  :global(.atropos-rotate) {
    pointer-events: all;
  }
}

.slideWrapper {
  max-width: u.rem-calc(500);

  @include bp.down(xl) {
    max-width: u.rem-calc(400);
  }
}

.slide {
  cursor: pointer;
  max-width: u.rem-calc(500);
  transition: 0.4s;
  width: 100%;

  @include bp.down(xl) {
    max-width: u.rem-calc(400);
  }

  &:not(.isActive, .isPrev, .isNext) {
    opacity: 0;
    transform: translateY(u.rem-calc(200)) scale(0.6) !important;
    transition: 0.4s !important;
  }
}

.isNext {
  @include slide-transform();
}

.isPrev {
  @include slide-transform(-17deg, 70);
}
