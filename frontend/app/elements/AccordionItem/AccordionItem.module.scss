@use 'scss/breakpoint' as bp;
@use 'scss/color';
@use 'scss/font';
@use 'scss/unit' as u;

$border-radius: u.rem-calc(14);
$transition: 0.25s;

.labelButton {
  align-items: center;
  background: var(--theme-color-background);
  border: none;
  border-radius: $border-radius;
  color: var(--theme-color-primary);
  cursor: pointer;
  display: flex;
  font-family: font.get(primary);
  gap: u.rem-calc(20);
  justify-content: space-between;
  padding: u.rem-calc(14) u.rem-calc(26);
  transition: $transition;
  width: 100%;

  @include bp.down(sm) {
    padding: u.rem-calc(10) u.rem-calc(22);
  }
}

.icon {
  transition: $transition;
}

.content {
  opacity: 0;
  padding: 0 u.rem-calc(26) 0 u.rem-calc(26);
  transition: $transition;

  @include bp.down(sm) {
    padding: 0 u.rem-calc(22) 0 u.rem-calc(22);
  }
}

.isOpen {
  padding-bottom: u.rem-calc(20);

  .labelButton {
    background: var(--theme-color-secondary);
    color: var(--theme-color-background);
    margin-bottom: u.rem-calc(10);
  }

  .icon {
    transform: rotate(180deg);

    path {
      fill: var(--theme-color-background);
    }
  }

  .content {
    opacity: 1;
  }
}

.wrapper {
  background: var(--theme-color-background);
  border-radius: $border-radius;
  box-shadow: 0 u.rem-calc(4) u.rem-calc(10) rgba(0, 0, 0, 0.1);
  overflow: hidden;
  transition: $transition;

  &:not(.isOpen) .content {
    height: 0 !important;
  }
}
